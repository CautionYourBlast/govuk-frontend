{% from "../scot-gov-error-message/macro.njk" import scotGovErrorMessage -%}
{% from "../scot-gov-hint/macro.njk" import scotGovHint %}
{% from "../scot-gov-label/macro.njk" import scotGovLabel %}

{#- a record of other elements that we need to associate with the input using
  aria-describedby â€“ for example hints or error messages -#}
{% set describedBy = params.describedBy if params.describedBy else "" %}
<div class="ds_question {%- if params.errorMessage %} ds_question--error{% endif %} {%- if params.formGroup.classes %} {{ params.formGroup.classes }}{% endif %}">
  {{ scotGovLabel({
    html: params.label.html,
    text: params.label.text,
    classes: params.label.classes,
    isPageHeading: params.label.isPageHeading,
    attributes: params.label.attributes,
    for: params.id
  }) | indent(2) | trim }}
{% if params.hint %}
  {% set hintId = params.id + '-hint' %}
  {% set describedBy = describedBy + ' ' + hintId if describedBy else hintId %}
  {{ scotGovHint({
    id: hintId,
    classes: params.hint.classes,
    attributes: params.hint.attributes,
    html: params.hint.html,
    text: params.hint.text
  }) | indent(2) | trim }}
{% endif %}
{% if params.errorMessage %}
  {% set errorId = params.id + '-error' %}
  {% set describedBy = describedBy + ' ' + errorId if describedBy else errorId %}
  {{ scotGovErrorMessage({
    id: errorId,
    classes: params.errorMessage.classes,
    attributes: params.errorMessage.attributes,
    html: params.errorMessage.html,
    text: params.errorMessage.text,
    visuallyHiddenText: params.errorMessage.visuallyHiddenText
  }) | indent(2) | trim }}
{% endif %}
  <div class="ds_select-wrapper  ds_input--fluid-one-third">
    <select class="ds_select
      {%- if params.classes %} {{ params.classes }}{% endif %}{%- if params.errorMessage %} ds_select--error{% endif %}" id="{{ params.id }}" name="{{ params.name }}"
      {%- if params.disabled %} disabled{% endif %}
      {%- if describedBy %} aria-describedby="{{ describedBy }}"{% endif %}
      {%- for attribute, value in params.attributes %} {{ attribute }}="{{ value }}"{% endfor %}>
    {% for item in params.items %}
      {% if item %}
        {# Allow selecting by text content (the value for an option when no value attribute is specified) #}
        {% set effectiveValue = item.value | default(item.text) %}
        <option {%- if item.value !== undefined %} value="{{ item.value }}"{% endif %}
          {{-" selected" if item.selected | default((effectiveValue == params.value and item.selected != false) if params.value else false, true) }}
          {{-" disabled" if item.disabled }}
          {%- for attribute, value in item.attributes %} {{ attribute }}="{{ value }}"{% endfor -%}>{{ item.text }}</option>
      {% endif %}
    {% endfor %}
    </select>
    <span class="ds_select-arrow" aria-hidden="true"></span>
  </div>
</div>
